---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: dashboard
  namespace: kubernetes-dashboard
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes.github.io/dashboard/
      chart: kubernetes-dashboard
      version: 5.0.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: kubernetesui/dashboard
      tag: v2.3.1
      pullPolicy: IfNotPresent
      pullSecrets: []

    replicaCount: 1

    ## Here annotations can be added to the kubernetes dashboard deployment
    annotations: {}
    ## Here labels can be added to the kubernetes dashboard deployment
    labels: {}

    ## Additional container arguments
    ##
    extraArgs:
      - --enable-skip-login
    #  - --enable-insecure-login
    #   - --system-banner="Welcome to Kubernetes"

    ## Additional container environment variables
    ##
    extraEnv: []
    # - name: SOME_VAR
    #   value: 'some value'

    ## Additional volumes to be added to kubernetes dashboard pods
    ##
    extraVolumes: []
    # - name: dashboard-kubeconfig
    #   secret:
    #     defaultMode: 420
    #     secretName: dashboard-kubeconfig

    ## Additional volumeMounts to be added to kubernetes dashboard pods
    ##
    extraVolumeMounts: []
    # - mountPath: /kubeconfig
    #   name: dashboard-kubeconfig
    #   readOnly: true

    # Annotations to be added to kubernetes dashboard pods
    podAnnotations:
      seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

    # Labels to be added to kubernetes dashboard pods
    podLabels: {}

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}

    ## List of node taints to tolerate (requires Kubernetes >= 1.6)
    tolerations: []
    #  - key: "key"
    #    operator: "Equal|Exists"
    #    value: "value"
    #    effect: "NoSchedule|PreferNoSchedule|NoExecute"

    ## Affinity
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    affinity: {}

    # priorityClassName: ""

    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 2
        memory: 200Mi

    ## Serve application over HTTP without TLS
    ##
    ## Note: If set to true, you may want to add --enable-insecure-login to extraArgs
    protocolHttp: false

    service:
      type: ClusterIP
      externalPort: 443

      # LoadBalancerSourcesRange is a list of allowed CIDR values, which are combined with ServicePort to
      # set allowed inbound rules on the security group assigned to the master load balancer
      # loadBalancerSourceRanges: []

      ## Additional Kubernetes Dashboard Service annotations
      annotations: {}

      ## Here labels can be added to the Kubernetes Dashboard service
      labels: {}

      ## set a specific load balancer Ip if you're using one
      # loadBalancerIP:

      ## Enable or disable the kubernetes.io/cluster-service label. Should be disabled for GKE clusters >=1.15.
      ## Otherwise, the addon manager will presume ownership of the service and try to delete it.
      clusterServiceLabel:
        enabled: true
        key: "kubernetes.io/cluster-service"

    ingress:
      ## If true, Kubernetes Dashboard Ingress will be created.
      ##
      enabled: true

      ## Kubernetes Dashboard Ingress annotations
      ##
      ## Add custom labels
      # labels:
      #   key: value
      annotations:
        nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
      ## If you plan to use TLS backend with enableInsecureLogin set to false
      ## (default), you need to uncomment the below.
      ## If you use ingress-nginx < 0.21.0
      #   nginx.ingress.kubernetes.io/secure-backends: "true"
      ## if you use ingress-nginx >= 0.21.0
      # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"


      ## Kubernetes Dashboard Ingress paths
      ##
      paths:
        - /
      #  - /*

      ## Custom Kubernetes Dashboard Ingress paths. Will override default paths.
      ##
      customPaths: []
      #  - backend:
      #      serviceName: ssl-redirect
      #      servicePort: use-annotation
      #  - backend:
      #      serviceName: >-
      #        {{ include "kubernetes-dashboard.fullname" . }}
      #      # Don't use string here, use only integer value!
      #      servicePort: 443

      ## Kubernetes Dashboard Ingress hostnames
      ## Must be provided if Ingress is enabled
      ##
      hosts:
        # virtualHost (default value is pi.hole) will be appended to the hosts
        - dashboard.${SECRET_DOMAIN}
      tls:
      - hosts:
        - dashboard.${SECRET_DOMAIN}

    settings: {}
      ## Cluster name that appears in the browser window title if it is set
      # clusterName: ""
      ## Max number of items that can be displayed on each list page
      # itemsPerPage: 10
      ## Number of seconds between every auto-refresh of logs
      # logsAutoRefreshTimeInterval: 5
      ## Number of seconds between every auto-refresh of every resource. Set 0 to disable
      # resourceAutoRefreshTimeInterval: 5
      ## Hide all access denied warnings in the notification panel
      # disableAccessDeniedNotifications: false

    ## Pinned CRDs that will be displayed in dashboard's menu
    pinnedCRDs: []
      # - kind: customresourcedefinition
      ##  Fully qualified name of a CRD
      #   name: prometheuses.monitoring.coreos.com
      ##  Display name
      #   displayName: Prometheus
      ##  Is this CRD namespaced?
      #   namespaced: true

    ## Metrics Scraper
    ## Container to scrape, store, and retrieve a window of time from the Metrics Server.
    ## refs: https://github.com/kubernetes-sigs/dashboard-metrics-scraper
    metricsScraper:
      enabled: true
      image:
        repository: kubernetesui/metrics-scraper
        tag: v1.0.7
      resources: {}
      ## SecurityContext for the metrics scraper container
      containerSecurityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsUser: 1001
        runAsGroup: 2001
    #  args:
    #    - --log-level=info
    #    - --logtostderr=true

    ## Optional Metrics Server sub-chart
    ## Enable this is you don't already have metrics-server enabled on your cluster and
    ## want to use it with dashboard metrics-scraper
    ## refs:
    ##  - https://hub.helm.sh/charts/stable/metrics-server
    ##  - https://github.com/kubernetes-sigs/metrics-server
    metrics-server:
      enabled: false
      ## Example for additional args
      # args:
      #  - --kubelet-preferred-address-types=InternalIP
      #  - --kubelet-insecure-tls

    rbac:
      # Specifies whether namespaced RBAC resources (Role, Rolebinding) should be created
      create: true

      # Specifies whether cluster-wide RBAC resources (ClusterRole, ClusterRolebinding) to access metrics should be created
      # Independent from rbac.create parameter.
      clusterRoleMetrics: true

      # Start in ReadOnly mode.
      # Only dashboard-related Secrets and ConfigMaps will still be available for writing.
      #
      # The basic idea of the clusterReadOnlyRole
      # is not to hide all the secrets and sensitive data but more
      # to avoid accidental changes in the cluster outside the standard CI/CD.
      #
      # It is NOT RECOMMENDED to use this version in production.
      # Instead you should review the role and remove all potentially sensitive parts such as
      # access to persistentvolumes, pods/log etc.
      #
      # Independent from rbac.create parameter.
      clusterReadOnlyRole: false

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name:

    livenessProbe:
      # Number of seconds to wait before sending first probe
      initialDelaySeconds: 30
      # Number of seconds to wait for probe response
      timeoutSeconds: 30

    ## podDisruptionBudget
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    podDisruptionBudget:
      enabled: false
      minAvailable:
      maxUnavailable:

    ## PodSecurityContext for pod level securityContext
    # securityContext:
    #   runAsUser: 1001
    #   runAsGroup: 2001

    ## SecurityContext for the kubernetes dashboard container
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 1001
      runAsGroup: 2001

    networkPolicy:
      enabled: false

    ## podSecurityPolicy for fine-grained authorization of pod creation and updates
    podSecurityPolicy:
      # Specifies whether a pod security policy should be created
      enabled: false
