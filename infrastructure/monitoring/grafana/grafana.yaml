---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.16.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    adminPassword: ${SECRET_GRAFANA_PASSWORD}
    # image:
    #   repository: grafana/grafana
    #   tag: 7.0.4
    # tolerations:
    # - key: "arm"
    #   operator: "Exists"
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      backup.velero.io/backup-volumes: storage
      configmap.reloader.stakater.com/reload: "grafana"
    persistence:
      enabled: true
      storageClassName: "nfs-client"
      size: 10Gi
      accessModes:
      - ReadWriteOnce
    initChownData:
      ## If false, data ownership will not be reset at startup
      ## This allows the prometheus-server to be run with an arbitrary user
      ##
      enabled: false
    env:
      GF_EXPLORE_ENABLED: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
      hosts: 
        - grafana.${SECRET_DOMAIN}
      tls:
      - hosts:
        - grafana.${SECRET_DOMAIN}
    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - grafana-clock-panel
    - vonage-status-panel
    - https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip;grafana-worldmap-panel-ng
    serviceMonitor:
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: 'teslamate'
          orgId: 1
          folder: Teslamate
          type: file
          disableDeletion: false
          # updateIntervalSeconds: -1
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/teslamate
    dashboards:
      default:
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus 
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/v0.13/docs/blocky-grafana.json
          datasource: Prometheus
        cable-modem-stats:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/cable_modem_stats.json
          # datasource: cable_modem_stats
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        # frigate:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/frigate.json
        #   datasource: influxdb
        home-assistant:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/home_assistant.json
          datasource: home_assistant
        internet-speed:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        minio-overview:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/minio_overview.json
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        node-exporter-full:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/node_exporter_full.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        uptimerobot:
          url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
          datasource: Prometheus
        vernemq:
          url: https://raw.githubusercontent.com/vernemq/vernemq/master/metrics_scripts/grafana/VerneMQ%20Node%20Metrics.json
          datasource: Prometheus
        velero:
          url: https://grafana.com/api/dashboards/11055/revisions/2/download
          datasource: Prometheus              
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://thanos-query-http:10902/
          isDefault: true
        - name: loki
          type: loki
          access: proxy
          url: http://loki.logs.svc.cluster.local:3100
        - name: influxdb
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: telegraf        
        - name: home_assistant
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: home_assistant
        - name: speedtests
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: speedtests
        - name: uptimerobot
          type: influxdb
          access: proxy
          url: http://influxdb:8086
          database: uptimerobot        
    grafana.ini:
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
      panels:
        disable_sanitize_html: true
      # security:
      #   admin_user: jeff@billimek.com
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
  
