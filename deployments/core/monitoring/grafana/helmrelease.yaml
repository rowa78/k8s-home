---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 1h
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.24.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/grafana

    deploymentStrategy:
      type: Recreate
    
    initChownData:
      ## If false, data ownership will not be reset at startup
      ## This allows the prometheus-server to be run with an arbitrary user
      ##
      enabled: false

    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug

    grafana.ini:
      server:
        root_url: "https://grafana.${SECRET_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console

    adminUser: "${SECRET_GRAFANA_ADMIN_USER}"
    adminPassword: "${SECRET_GRAFANA_ADMIN_PASSWORD}"

    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-areaspline"        
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN_2}" 
        external-dns.alpha.kubernetes.io/ttl: "120" 
        nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN_2}/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN_2}/oauth2/start
        kubernetes.io/ingress.class: "nginx"
      hosts:
      - "grafana.${SECRET_DOMAIN_2}"
      tls:
      - hosts:
        - "grafana.${SECRET_DOMAIN_2}"

    persistence:
      enabled: true
      existingClaim: grafana-config-v1

    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - grafana-clock-panel
    - vonage-status-panel
    - https://github.com/panodata/grafana-map-panel/releases/download/0.15.0/grafana-map-panel-0.15.0.zip;grafana-worldmap-panel-ng

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default        

    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-prometheus:9090
          access: proxy
          isDefault: true          
        - name: Loki
          type: loki
          access: proxy
          url: http://loki:3100         

    dashboards:
      default:
        node-exporter-full:
          url: https://grafana.com/api/dashboards/1860/revisions/22/download
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
      
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL

    resources:
      requests:
        cpu: 75m
        memory: 128Mi
      limits:
        memory: 512Mi
