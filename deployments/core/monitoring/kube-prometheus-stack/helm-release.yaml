---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 19.1.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values:
    fullnameOverride: prometheus
    alertmanager:              
      ingress:
        enabled: false
        pathType: Prefix                
        hosts:
        - "alert-manager.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "alert-manager.${SECRET_DOMAIN}"
          secretName: alert-manager-cert
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn-backup"
              resources:
                requests:
                  storage: 1Gi

    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node

    kube-state-metrics:
      fullnameOverride: kube-state-metrics

    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance

    kubeApiServer:
      enabled: true

    kubeEtcd:
      enabled: false

    kubeControllerManager:
      enabled: false

    kubeScheduler:
      enabled: false

    kubeProxy:
      enabled: false

    prometheus-node-exporter:
      fullnameOverride: node-exporter
      tolerations:
      - effect: "NoExecute"
        operator: "Exists"
      - effect: "NoSchedule"
        operator: "Exists"

    prometheus:
      ingress:
        enabled: false
        pathType: Prefix
        hosts:
        - "prometheus.${SECRET_DOMAIN}"
        tls:
        - hosts:
          - "prometheus.${SECRET_DOMAIN}"
          secretName: prom-server-cert
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 2048Mi
          cpu: 500m

      thanosService:
        enabled: true

      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn-nobackup"
              resources:
                requests:
                  storage: 5Gi

        thanos:
          image: quay.io/thanos/thanos:v0.23.1
          version: v0.21.1
          objectStorageConfig:
            name: thanos-objstore-secret
            key: objstore.yml
